{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Iman_42_2\\\\lesson4\\\\src\\\\components\\\\todo\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classes from './Todo.module.scss';\nimport Button from '../button/Button';\nimport { findAllByDisplayValue } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  todo,\n  handleDone,\n  handleDelete,\n  handleEdit,\n  setCurrentId,\n  isEdit\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState(todo.title);\n  console.log(inputValue, 'inputValue');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: `${classes.li} ${todo.completed && classes.done}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.info,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"id: \", todo.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"title: \", todo.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"completed: \", todo.completed ? 'true' : 'false']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btns,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          name: 'Edit',\n          action: () => setCurrentId(todo.id),\n          color: 'primary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: 'Done',\n          action: () => handleDone(todo.id),\n          color: 'secondary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: 'Delete',\n          action: () => {\n            handleDelete(todo.id);\n          },\n          color: 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.li,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Save',\n        color: 'primary',\n        action: () => {\n          handleEdit({\n            ...todo,\n            title: inputValue\n          });\n          setCurrentId(isEdit === null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Cancel',\n        color: 'error',\n        action: () => {\n          setCurrentId(isEdit === null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"s9xrYNwYdybFGIZZCB9YkfhuMBw=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","classes","Button","findAllByDisplayValue","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","todo","handleDone","handleDelete","handleEdit","setCurrentId","isEdit","_s","inputValue","setInputValue","title","console","log","children","className","li","completed","done","info","id","fileName","_jsxFileName","lineNumber","columnNumber","btns","name","action","color","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Iman_42_2/lesson4/src/components/todo/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport classes from './Todo.module.scss';\r\nimport Button from '../button/Button';\r\nimport {findAllByDisplayValue} from '@testing-library/react';\r\n\r\n\r\nconst Todo = ({\r\n                  todo,\r\n                  handleDone,\r\n                  handleDelete,\r\n                  handleEdit,\r\n                  setCurrentId,\r\n                  isEdit\r\n              }) => {\r\n    const [inputValue, setInputValue] = useState(todo.title);\r\n    console.log(inputValue, 'inputValue');\r\n\r\n    return (\r\n        <>\r\n\r\n            <li className={`${classes.li} ${todo.completed && classes.done}`}>\r\n                <div className={classes.info}>\r\n                    <p>id: {todo.id}</p>\r\n                    <p>title: {todo.title}</p>\r\n                    <p>completed: {todo.completed ? 'true' : 'false'}</p>\r\n                </div>\r\n                <div className={classes.btns}>\r\n                    <Button name={'Edit'} action={() => setCurrentId(todo.id)} color={'primary'}/>\r\n                    <Button name={'Done'} action={() => handleDone(todo.id)} color={'secondary'}/>\r\n                    <Button name={'Delete'} action={() => {\r\n                        handleDelete(todo.id);\r\n                    }} color={'error'}/>\r\n                </div>\r\n            </li>\r\n            {\r\n                isEdit && <div className={classes.li}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}/>\r\n                    <Button name={'Save'} color={'primary'} action={() => {\r\n                        handleEdit({\r\n                            ...todo,\r\n                            title: inputValue,\r\n                        })\r\n                        setCurrentId(isEdit===null)\r\n                    }}/>\r\n                    <Button name={'Cancel'} color={'error'} action={() => {setCurrentId( isEdit===null)}}/>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Todo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}